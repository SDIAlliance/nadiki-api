openapi: 3.0.0
info:
  title: Datacenter Emissions API
  version: 1.0.0
paths:
  /datacenters:
    get:
      summary: Get all datacenters
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              example: |
                [
                  {
                    "id": 1,
                    "name": "Datacenter 1",
                    "street": "123 Main Street",
                    "postcode": "12345",
                    "city": "City",
                    "country": "Country"
                  },
                  ...
                ]
    post:
      summary: Create a new datacenter
      requestBody:
        required: true
        content:
          application/json:
            example: |
              {
                "name": "New Datacenter",
                "street": "456 New Street",
                "postcode": "67890",
                "city": "New City",
                "country": "New Country"
              }
      responses:
        '201':
          description: Datacenter created successfully
  /datacenters/{datacenterId}:
    get:
      summary: Get details of a specific datacenter
      parameters:
        - name: datacenterId
          in: path
          required: true
          description: ID of the datacenter
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              example: |
                {
                  "id": 1,
                  "name": "Datacenter 1",
                  "street": "123 Main Street",
                  "postcode": "12345",
                  "city": "City",
                  "country": "Country"
                }
    put:
      summary: Update details of a specific datacenter
      parameters:
        - name: datacenterId
          in: path
          required: true
          description: ID of the datacenter
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            example: |
              {
                "name": "Updated Datacenter",
                "street": "456 Updated Street",
                "postcode": "67890",
                "city": "Updated City",
                "country": "Updated Country"
              }
      responses:
        '200':
          description: Datacenter updated successfully
    delete:
      summary: Delete a specific datacenter
      parameters:
        - name: datacenterId
          in: path
          required: true
          description: ID of the datacenter
          schema:
            type: integer
      responses:
        '204':
          description: Datacenter deleted successfully

  /datacenters/{datacenterId}/emissions:
    get:
      summary: Get emissions data for a specific datacenter
      parameters:
        - name: datacenterId
          in: path
          required: true
          description: ID of the datacenter
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              example: |
                [
                  {
                    "timestamp": "2023-01-01T12:00:00Z",
                    "outside_temperature": 25.5,
                    "outside_humidity": 50,
                    "inside_temperature": 22.3,
                    "inside_humidity": 45,
                    "airflow": 1000,
                    "outside_pressure": 1012.5,
                    "dew_point": 18.7,
                    "inlet_temperature": 23.5,
                    "inlet_humidity": 40,
                    "outlet_temperature": 24.8,
                    "outlet_humidity": 42,
                    "power_consumption": 120.5,
                    "renewables": 30,
                    "embedded_emissions": 15.2
                  },
                  ...
                ]
    post:
      summary: Add new emissions data for a specific datacenter
      parameters:
        - name: datacenterId
          in: path
          required: true
          description: ID of the datacenter
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            example: |
              {
                "timestamp": "2023-01-01T13:00:00Z",
                "outside_temperature": 26.0,
                "outside_humidity": 52,
                "inside_temperature": 22.5,
                "inside_humidity": 46,
                "airflow": 1050,
                "outside_pressure": 1013.0,
                "dew_point": 19.0,
                "inlet_temperature": 24.0,
                "inlet_humidity": 42,
                "outlet_temperature": 25.0,
                "outlet_humidity": 44,
                "power_consumption": 125.0,
                "renewables": 32,
                "embedded_emissions": 16.0
              }
      responses:
        '201':
          description: Emissions data added successfully
  /datacenters/{datacenterId}/emissions/{emissionId}:
    get:
      summary: Get details of emissions data for a specific datacenter
      parameters:
        - name: datacenterId
          in: path
          required: true
          description: ID of the datacenter
          schema:
            type: integer
        - name: emissionId
          in: path
          required: true
          description: ID of the emission data
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              example: |
                {
                  "timestamp": "2023-01-01T13:00:00Z",
                  "outside_temperature": 26.0,
                  "outside_humidity": 52,
                  "inside_temperature": 22.5,
                  "inside_humidity": 46,
                  "airflow": 1050,
                  "outside_pressure": 1013.0,
                  "dew_point": 19.0,
                  "inlet_temperature": 24.0,
                  "inlet_humidity": 42,
                  "outlet_temperature": 25.0,
                  "outlet_humidity": 44,
                  "power_consumption": 125.0,
                  "renewables": 32,
                  "embedded_emissions": 16.0
                }
    put:
      summary: Update details of emissions data for a specific datacenter
      parameters:
        - name: datacenterId
          in: path
          required: true
          description: ID of the datacenter
          schema:
            type: integer
        - name: emissionId
          in: path
          required: true
          description: ID of the emission data
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            example: |
              {
                "timestamp": "2023-01-01T13:00:00Z",
                "outside_temperature": 26.2,
                "outside_humidity": 53,
                "inside_temperature": 22.7,
                "inside_humidity": 47,
                "airflow": 1060,
                "outside_pressure": 1013.2,
                "dew_point": 19.2,
                "inlet_temperature": 24.2,
                "inlet_humidity": 43,
                "outlet_temperature": 25.2,
                "outlet_humidity": 45,
                "power_consumption": 126.0,
                "renewables": 33,
                "embedded_emissions": 16.5
              }
      responses:
        '200':
          description: Emissions data updated successfully
    delete:
      summary: Delete specific emissions data for a datacenter
      parameters:
        - name: datacenterId
          in: path
          required: true
          description: ID of the datacenter
          schema:
            type: integer
        - name: emissionId
          in: path
          required: true
          description: ID of the emission data
          schema:
            type: integer
      responses:
        '204':
          description: Emissions data deleted successfully
