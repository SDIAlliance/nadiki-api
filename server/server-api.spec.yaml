openapi: 3.0.0
info:
  title: Server Registry API
  version: '1.0.0'
  description: |
    API for registering and managing data center servers.
    
    ## Metric Naming Conventions
    Server metrics follow standard Prometheus naming conventions with appropriate unit suffixes.

servers:
  - url: https://api.registry.example.com/v1
    description: Registry API v1

paths:
  /servers:
    post:
      summary: Register a new server
      description: Create a new server entry in the registry
      operationId: createServer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServerCreate'
      responses:
        '201':
          description: Server successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerResponse'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      summary: List all servers
      description: Retrieve a list of all registered servers
      operationId: listServers
      parameters:
        - name: limit
          in: query
          description: Maximum number of servers to return
          required: false
          schema:
            type: integer
            default: 20
        - name: offset
          in: query
          description: Number of servers to skip
          required: false
          schema:
            type: integer
            default: 0
        - name: facility_id
          in: query
          description: Filter servers by facility ID
          required: false
          schema:
            type: string
        - name: rack_id
          in: query
          description: Filter servers by rack ID
          required: false
          schema:
            type: string
      responses:
        '200':
          description: List of servers
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/ServerResponse'
                  total:
                    type: integer
                    description: Total number of servers
                  limit:
                    type: integer
                    description: Number of servers per page
                  offset:
                    type: integer
                    description: Current offset

  /servers/{serverId}:
    parameters:
      - name: serverId
        in: path
        required: true
        schema:
          type: string
        description: Unique server identifier (format SERVER-[FACILITY_ID]-[RACK_ID]-[SERVER_ID])
    get:
      summary: Get server details
      description: Retrieve detailed information about a specific server
      operationId: getServer
      responses:
        '200':
          description: Server details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerResponse'
        '404':
          description: Server not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update server
      description: Update all server information
      operationId: updateServer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServerUpdate'
      responses:
        '200':
          description: Server successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerResponse'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Server not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete server
      description: Remove a server from the registry
      operationId: deleteServer
      responses:
        '204':
          description: Server successfully deleted
        '404':
          description: Server not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    ImpactAssessment:
      type: object
      properties:
        climate_change:
          type: number
          format: float
          description: Climate change impact in kg CO2 eq. If left blank, will be retrieved from Boavizta API according to server specifications.
          default: 0
        ozone_depletion:
          type: number
          format: float
          description: Ozone depletion impact in kg CFC-11 eq. If left blank, will be retrieved from Boavizta API according to server specifications.
          default: 0
        human_toxicity:
          type: number
          format: float
          description: Human toxicity impact in kg 1,4-DB eq. If left blank, will be retrieved from Boavizta API according to server specifications.
          default: 0
        photochemical_oxidant_formation:
          type: number
          format: float
          description: Photochemical oxidant formation impact in kg NMVOC. If left blank, will be retrieved from Boavizta API according to server specifications.
          default: 0
        particulate_matter_formation:
          type: number
          format: float
          description: Particulate matter formation impact in kg PM10 eq. If left blank, will be retrieved from Boavizta API according to server specifications.
          default: 0
        ionizing_radiation:
          type: number
          format: float
          description: Ionizing radiation impact in kg U235 eq. If left blank, will be retrieved from Boavizta API according to server specifications.
          default: 0
        terrestrial_acidification:
          type: number
          format: float
          description: Terrestrial acidification impact in kg SO2 eq. If left blank, will be retrieved from Boavizta API according to server specifications.
          default: 0
        freshwater_eutrophication:
          type: number
          format: float
          description: Freshwater eutrophication impact in kg P eq. If left blank, will be retrieved from Boavizta API according to server specifications.
          default: 0
        marine_eutrophication:
          type: number
          format: float
          description: Marine eutrophication impact in kg N eq. If left blank, will be retrieved from Boavizta API according to server specifications.
          default: 0
        terrestrial_ecotoxicity:
          type: number
          format: float
          description: Terrestrial ecotoxicity impact in kg 1,4-DB eq. If left blank, will be retrieved from Boavizta API according to server specifications.
          default: 0
        freshwater_ecotoxicity:
          type: number
          format: float
          description: Freshwater ecotoxicity impact in kg 1,4-DB eq. If left blank, will be retrieved from Boavizta API according to server specifications.
          default: 0
        marine_ecotoxicity:
          type: number
          format: float
          description: Marine ecotoxicity impact in kg 1,4-DB eq. If left blank, will be retrieved from Boavizta API according to server specifications.
          default: 0
        agricultural_land_occupation:
          type: number
          format: float
          description: Agricultural land occupation impact in m2a. If left blank, will be retrieved from Boavizta API according to server specifications.
          default: 0
        urban_land_occupation:
          type: number
          format: float
          description: Urban land occupation impact in m2a. If left blank, will be retrieved from Boavizta API according to server specifications.
          default: 0
        natural_land_transformation:
          type: number
          format: float
          description: Natural land transformation impact in m2. If left blank, will be retrieved from Boavizta API according to server specifications.
          default: 0
        water_depletion:
          type: number
          format: float
          description: Water depletion impact in m3. If left blank, will be retrieved from Boavizta API according to server specifications.
          default: 0
        metal_depletion:
          type: number
          format: float
          description: Metal depletion impact in kg Fe eq. If left blank, will be retrieved from Boavizta API according to server specifications.
          default: 0
        fossil_depletion:
          type: number
          format: float
          description: Fossil depletion impact in kg oil eq. If left blank, will be retrieved from Boavizta API according to server specifications.
          default: 0

    CPU:
      type: object
      required:
        - vendor
        - type
      properties:
        vendor:
          type: string
          description: CPU vendor (e.g., Intel, AMD)
        type:
          type: string
          description: CPU type identifier
        physical_core_count:
          type: integer
          minimum: 1

    GPU:
      type: object
      required:
        - vendor
        - type
      properties:
        vendor:
          type: string
          description: GPU vendor (e.g., Nvidia, AMD)
        type:
          type: string
          description: GPU type identifier

    FPGA:
      type: object
      required:
        - vendor
        - type
      properties:
        vendor:
          type: string
          description: FPGA vendor (e.g., Intel, Xilinx)
        type:
          type: string
          description: FPGA type identifier

    StorageDevice:
      type: object
      required:
        - vendor
        - capacity
        - type
      properties:
        vendor:
          type: string
          description: Disk vendor (e.g., Samsung, Intel)
        capacity:
          type: number
          format: float
          description: Disk capacity in TB
        type:
          type: string
          enum: [NVMe, SSD, HDD, Other]
          description: Type of storage device

    ServerCreate:
      type: object
      required:
        - facility_id
        - rack_id
        - cooling_type
      properties:
        facility_id:
          type: string
          description: ID of the facility where the server is located
        rack_id:
          type: string
          description: ID of the rack where the server is installed
        impact_assessment:
          $ref: '#/components/schemas/ImpactAssessment'
        rated_power:
          type: number
          format: float
          description: Rated power in kW
        total_cpu_sockets:
          type: integer
          minimum: 1
          default: 2
          description: Total number of CPU sockets
        installed_cpus:
          type: array
          items:
            $ref: '#/components/schemas/CPU'
          description: Array of installed CPUs
        number_of_psus:
          type: integer
          minimum: 1
          default: 2
          description: Number of power supply units
        total_installed_memory:
          type: integer
          description: Total installed memory in GB
        number_of_memory_units:
          type: integer
          description: Number of memory units installed
        storage_devices:
          type: array
          items:
            $ref: '#/components/schemas/StorageDevice'
          description: Array of installed storage devices
        installed_gpus:
          type: array
          items:
            $ref: '#/components/schemas/GPU'
          description: Array of installed GPUs
        installed_fpgas:
          type: array
          items:
            $ref: '#/components/schemas/FPGA'
          description: Array of installed FPGAs
        product_passport:
          type: object
          description: LCA product passport data
        cooling_type:
          type: string
          enum: [direct-to-chip, immersion, back-door-liquid, back-door-fan, air]
          default: air
          description: Type of cooling system used for this server
        description:
          type: string
          description: Textual description ob the facility for informational purposes

    ServerUpdate:
      allOf:
        - $ref: '#/components/schemas/ServerCreate'
        - type: object
          required:
            - facility_id
            - rack_id
            - cooling_type

    ServerTimeSeriesDataPoint:
      type: object
      required:
        - measurement
        - field
        - granularitySeconds
        - tags
      properties:
        measurement:
          type: string
          description: Name of the Influx measurement
          enum:
            - facility
            - rack
            - server
        field:
          type: string
          description: Metric name with unit suffix
          pattern: /^(cpu_energy_consumption_joules|server_energy_consumption_joules)$/
        granularitySeconds:
          type: integer
          description: Time series data granularity in seconds
          default: 30
        tags:
          type: object
          required:
            - facility_id
            - rack_id
            - server_id
            - country_code
          properties:
            facility_id:
              type: string
              description: Facility identifier
            rack_id:
              type: string
              description: Rack identifier
            server_id:
              type: string
              description: Server identifier (format SERVER-[FACILITY_ID]-[RACK_ID]-[SERVER_ID])
            country_code:
              type: string
              description: ISO 3166-1 alpha-3 country code

    ServerTimeSeriesConfig:
      type: object
      required:
        - endpoint
        - org
        - bucket
        - token
        - dataPoints
      properties:
        endpoint:
          type: string
          description: InfluxDB endpoint URL with port number
          example: https://timeseries.registry.example.com:8086
        org:
          type: string
          description: InfluxDB organization to use
          example: leitmotiv
        bucket:
          type: string
          description: InfluxDB bucket to send data to
          example: my-bucket
        token:
          type: string
          description: InfluxDB token to use for authentication
          example: ABCDEFGHIJK
        dataPoints:
          type: array
          items:
            $ref: '#/components/schemas/ServerTimeSeriesDataPoint'
          description: List of time series metrics available for streaming

    ServerResponse:
      allOf:
        - $ref: '#/components/schemas/ServerCreate'
        - type: object
          required:
            - id
            - timeSeriesConfig
          properties:
            id:
              type: string
              description: Unique server identifier (format SERVER-[FACILITY_ID]-[RACK_ID]-[SERVER_ID])
              example: SERVER-FACILITY-NLD-001-RACK-001-001
            timeSeriesConfig:
              $ref: '#/components/schemas/ServerTimeSeriesConfig'
            boavizta_response:
              type: object
            createdAt:
              type: string
              format: date-time
            updatedAt:
              type: string
              format: date-time

    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          description: Error code
        message:
          type: string
          description: Error message
        details:
          type: object
          description: Additional error details

  x-supported-server-timeseries-metrics:
    description: List of all supported time series metrics for server monitoring
    metrics:
      - name: cpu_energy_consumption_joules
        unit: Energy
        description: Total energy consumption of all CPUs measured via RAPL
      - name: server_energy_consumption_joules
        unit: Energy
        description: Total energy consumption of the server measured via IPMI

tags:
  - name: Supported Time Series Metrics for Servers
    description: |
      The following metrics are supported for streaming time series data:
      
      ## Energy Metrics
      - `cpu_energy_consumption_joules`: CPU energy consumption via RAPL
      - `server_energy_consumption_joules`: Total server energy consumption via IPMI